1. 如果有dataframe df = pd.DataFrame({'X': [7, 2, 0, 3, 4, 2, 5, 0, 3, 4]}), 那么对于列X的每一个值，计算相对于离其最近的0的相对位置（如果前面没有0，则计算从头开始的位置），这样就会得到
[1, 2, 0, 1, 2, 3, 4, 0, 1, 2]，我们可以把它作为df的新的列'Y'.  问题：让用户输入任意一列整数，构造新的dataframe，以此列整数为列X，并按照上述方法计算新的列Y。
2. 滑动平均：给定dataframe包含两列，一列为group，一列为value，例如 df = pd.DataFrame({'group': list('aabbabbbabab'), 'value': [1, 2, 3, np.nan, 2, 3, np.nan, 1, 7, 3, np.nan, 8]})
请根据group的进行滑动平均，自己定义窗口尺寸，如遇到nan请忽略（注意不是作为0处理，是忽略）。例如上边的例子结果应为：
0     1.000000
1     1.500000
2     3.000000
3     3.000000
4     1.666667
5     3.000000
6     3.000000
7     2.000000
8     3.666667
9     2.000000
10    4.500000
11    4.000000
3. 扫雷游戏。创建一个dataframe来模拟扫雷游戏：
(1) 创建一个扫雷游戏，即创建一个dataframe，包含两列X和Y，例如5*4的扫雷游戏，这个dataframe分别记录5*4个格子的坐标，这个dataframe为两列，20行，它的一部分如下：
    x  y
0  0  0
1  0  1
2  0  2
（2）增加一列，此列为格子是否为雷，如果是的话值为1，否则为0. （使用随机函数，每个位置为雷的概率为0.4）
（3）再增加一列adjacent，此列记录当前格子相邻的格子的雷的数目，如果当前格子为雷，则值为NaN。
（4）创建一个新的5行4列的dataframe，其中值为(3)中计算得到的雷的数目。